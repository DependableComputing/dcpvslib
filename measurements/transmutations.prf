(transmutations
 (transmutation_TCC1 0
  (transmutation_TCC1-1 nil 3647778052 ("" (subtype-tcc) nil nil)
   ((valid_measurement? const-decl "bool" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (explicit_system? const-decl "bool" measurements nil)
    (unit_measurement const-decl "valid_measurement" measurements nil)
    (zero_measurement const-decl "measurement" measurements nil))
   nil))
 (transmutation_TCC2 0
  (transmutation_TCC2-1 nil 3647778345 ("" (subtype-tcc) nil nil)
   ((valid_measurement? const-decl "bool" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (explicit_system? const-decl "bool" measurements nil)
    (unit_measurement const-decl "valid_measurement" measurements nil)
    (zero_measurement const-decl "measurement" measurements nil))
   nil))
 (transmute_TCC1 0
  (transmute_TCC1-1 nil 3647778052 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (NOT_APPLICABLE? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (NOT_APPLICABLE adt-constructor-decl "(NOT_APPLICABLE?)"
     measurements nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (explicit_system? const-decl "bool" measurements nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (transmutation nonempty-type-eq-decl nil transmutations nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (transmute_TCC2 0
  (transmute_TCC2-1 nil 3647778115
   ("" (skeep)
    (("" (typepred "meas" "t`to_factor" "t`from_factor")
      ((""
        (expand* "valid_measurement?" "explicit_system?"
         "dimension_match?")
        (("" (smash) nil nil)) nil))
      nil))
    nil)
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT_APPLICABLE adt-constructor-decl "(NOT_APPLICABLE?)"
     measurements nil)
    (NOT_APPLICABLE? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (/= const-decl "boolean" notequal nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (dimension_match? const-decl "bool" measurements nil))
   nil))
 (times_TCC1 0
  (times_TCC1-1 nil 3647778945
   ("" (skeep)
    (("" (typepred "meas" "t`from_factor")
      (("" (expand "explicit_system?")
        (("" (replace -2) (("" (flatten) nil nil)) nil)) nil))
      nil))
    nil)
   ((transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (times_TCC2 0
  (times_TCC2-1 nil 3647778945 ("" (subtype-tcc) nil nil) nil nil))
 (commutative_mult 0
  (commutative_mult-1 nil 3647794135
   ("" (skeep)
    (("" (expand "*")
      (("" (name-replace "x" "transmute(meas, t)")
        (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((* const-decl "valid_measurement" transmutations nil)
    (* const-decl "valid_measurement" transmutations nil)
    (dimension_match? const-decl "bool" measurements nil)
    (system_match? const-decl "bool" measurements nil)
    (unit_match? const-decl "bool" measurements nil)
    (comparable? const-decl "bool" measurements nil)
    (= const-decl "bool" measurements nil)
    (transmute const-decl "valid_measurement" transmutations nil)
    (transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT_APPLICABLE adt-constructor-decl "(NOT_APPLICABLE?)"
     measurements nil)
    (NOT_APPLICABLE? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (/= const-decl "boolean" notequal nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil))
   shostak))
 (not_associative_mult 0
  (not_associative_mult-1 nil 3647794245
   (""
    (inst 1
     "(# to_factor := unit_measurement WITH [`system := METRIC], from_factor := unit_measurement WITH [`system := IMPERIAL] #)"
     "unit_measurement WITH [`system := IMPERIAL]"
     "unit_measurement WITH [`system := IMPERIAL]")
    (("1" (split) (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)
     ("2" (grind) nil nil) ("3" (grind) nil nil) ("4" (grind) nil nil)
     ("5" (grind) nil nil))
    nil)
   ((dimension_match? const-decl "bool" measurements nil)
    (* const-decl "{m: valid_measurement | system_match?(x, m)}"
       measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (* const-decl "valid_measurement" transmutations nil)
    (transmute const-decl "valid_measurement" transmutations nil)
    (transmutation nonempty-type-eq-decl nil transmutations nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (system_match? const-decl "bool" measurements nil)
    (IMPERIAL? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (IMPERIAL adt-constructor-decl "(IMPERIAL?)" measurements nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (unit_measurement const-decl "valid_measurement" measurements nil)
    (METRIC? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (METRIC adt-constructor-decl "(METRIC?)" measurements nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (explicit_system? const-decl "bool" measurements nil))
   shostak))
 (divide_TCC1 0
  (divide_TCC1-1 nil 3647778945 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (NOT_APPLICABLE? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (NOT_APPLICABLE adt-constructor-decl "(NOT_APPLICABLE?)"
     measurements nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (explicit_system? const-decl "bool" measurements nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (transmutation nonempty-type-eq-decl nil transmutations nil)
    (dimension_match? const-decl "bool" measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (divide_TCC2 0
  (divide_TCC2-1 nil 3647779186 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (NOT_APPLICABLE? adt-recognizer-decl "[system_enum -> boolean]"
     measurements nil)
    (NOT_APPLICABLE adt-constructor-decl "(NOT_APPLICABLE?)"
     measurements nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (explicit_system? const-decl "bool" measurements nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (transmutation nonempty-type-eq-decl nil transmutations nil)
    (dimension_match? const-decl "bool" measurements nil)
    (zero_measurement const-decl "measurement" measurements nil))
   nil))
 (divide_TCC3 0
  (divide_TCC3-1 nil 3647779186
   ("" (skeep)
    (("" (typepred "meas" "t`to_factor")
      (("" (expand "explicit_system?")
        (("" (replace -3) (("" (flatten) nil nil)) nil)) nil))
      nil))
    nil)
   ((transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (divide_TCC4 0
  (divide_TCC4-1 nil 3647779232
   ("" (skeep)
    (("" (typepred "meas" "t`from_factor" "t`to_factor")
      (("" (expand* "/" "transmute") (("" (field) nil nil)) nil)) nil))
    nil)
   ((transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (divide_TCC5 0
  (divide_TCC5-1 nil 3647794567
   ("" (skeep)
    (("" (typepred "meas" "t`to_factor" "t`from_factor")
      (("" (expand* "/" "transmute") (("" (grind) nil nil)) nil)) nil))
    nil)
   ((transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (/ const-decl "valid_measurement" transmutations nil)
    (transmute const-decl "valid_measurement" transmutations nil))
   nil))
 (div_is_inv_mult_TCC1 0
  (div_is_inv_mult_TCC1-1 nil 3653048078
   ("" (skeep)
    (("" (typepred "t`to_factor")
      (("" (expand* "*" "transmute" "explicit_system?")
        (("" (grind) nil nil)) nil))
      nil))
    nil)
   ((transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (explicit_system? const-decl "bool" measurements nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (dimension_match? const-decl "bool" measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (* const-decl "valid_measurement" transmutations nil)
    (transmute const-decl "valid_measurement" transmutations nil))
   nil))
 (div_is_inv_mult_TCC2 0
  (div_is_inv_mult_TCC2-1 nil 3653048078 ("" (subtype-tcc) nil nil)
   ((transmute const-decl "valid_measurement" transmutations nil)
    (* const-decl "valid_measurement" transmutations nil))
   nil))
 (div_is_inv_mult 0
  (div_is_inv_mult-1 nil 3653048342 ("" (grind) nil nil)
   ((transmutation nonempty-type-eq-decl nil transmutations nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nzmeasurement nonempty-type-eq-decl nil measurements nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (valid_measurement nonempty-type-eq-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (transmute const-decl "valid_measurement" transmutations nil)
    (* const-decl "valid_measurement" transmutations nil)
    (/ const-decl "valid_measurement" transmutations nil)
    (dimension_match? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (explicit_system? const-decl "bool" measurements nil)
    (system_match? const-decl "bool" measurements nil)
    (unit_match? const-decl "bool" measurements nil)
    (comparable? const-decl "bool" measurements nil)
    (base_value const-decl "real" measurements nil)
    (= const-decl "bool" measurements nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   shostak)))

