(angles
 (angle_TCC1 0
  (angle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (unit_angle_TCC1 0
  (unit_angle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (negunit_angle_TCC1 0
  (negunit_angle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_nzrat_is_nzrat application-judgement "nzrat" rationals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (nonzero_angle_TCC1 0
  (nonzero_angle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (nonneg_angle_TCC1 0
  (nonneg_angle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (nonpos_angle_TCC1 0
  (nonpos_angle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (posangle_TCC1 0
  (posangle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (negangle_TCC1 0
  (negangle_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (minus_nzrat_is_nzrat application-judgement "nzrat" rationals nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (negunit_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (zero_angle const-decl "angle" angles nil)
    (zero_measurement const-decl "measurement" measurements nil))
   nil))
 (radian_TCC1 0
  (radian_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (radian? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (angle_plus_angle_is_angle_TCC1 0
  (angle_plus_angle_is_angle_TCC1-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle? const-decl "bool" angles nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (angle_plus_angle_is_angle_TCC2 0
  (angle_plus_angle_is_angle_TCC2-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle? const-decl "bool" angles nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (unit_match? const-decl "bool" measurements nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (explicit_system? const-decl "bool" measurements nil)
    (system_match? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (angle_plus_angle_is_angle 0
  (angle_plus_angle_is_angle-1 nil 3652714048 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (unit_match? const-decl "bool" measurements nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (system_match? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (explicit_system? const-decl "bool" measurements nil)
    (preferred_system? const-decl "bool" measurements nil)
    (+ const-decl "{m: valid_measurement | unit_match?(x, m)}"
       measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil))
   nil))
 (angle_minus_angle_is_angle 0
  (angle_minus_angle_is_angle-1 nil 3652714048 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (unit_match? const-decl "bool" measurements nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (system_match? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (explicit_system? const-decl "bool" measurements nil)
    (preferred_system? const-decl "bool" measurements nil)
    (- const-decl "{m: valid_measurement | unit_match?(x, m)}"
       measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil))
   nil))
 (real_times_angle_is_angle 0
  (real_times_angle_is_angle-1 nil 3652714048
   ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (* const-decl "{m: valid_measurement | unit_match?(y, m)}"
       measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil))
   nil))
 (angle_div_nzreal_is_angle 0
  (angle_div_nzreal_is_angle-1 nil 3652714048
   ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/ const-decl "{m: valid_measurement | unit_match?(x, m)}"
       measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil))
   nil))
 (neg_angle_is_angle 0
  (neg_angle_is_angle-1 nil 3652714048 ("" (judgement-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (- const-decl "{m: valid_measurement | unit_match?(x, m)}"
       measurements nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil))
   nil))
 (angle_div_angle_is_dimensionless_TCC1 0
  (angle_div_angle_is_dimensionless_TCC1-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (dimensionless? const-decl "bool" dimensionlesses nil)
    (dimensionless nonempty-type-eq-decl nil dimensionlesses nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (angle_div_angle_is_dimensionless_TCC2 0
  (angle_div_angle_is_dimensionless_TCC2-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (dimensionless? const-decl "bool" dimensionlesses nil)
    (dimensionless nonempty-type-eq-decl nil dimensionlesses nil)
    (number nonempty-type-decl nil numbers nil)
    (nzdimensionless nonempty-type-eq-decl nil dimensionlesses nil)
    (system_match? const-decl "bool" measurements nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (explicit_system? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (nzreal_times_nzangle_is_nzangle_TCC1 0
  (nzreal_times_nzangle_is_nzangle_TCC1-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (angle? const-decl "bool" angles nil)
    (angle nonempty-type-eq-decl nil angles nil)
    (number nonempty-type-decl nil numbers nil)
    (nzangle nonempty-type-eq-decl nil angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (nzreal_times_nzangle_is_nzangle 0
  (nzreal_times_nzangle_is_nzangle-1 nil 3652714048
   ("" (judgement-tcc) nil nil)
   ((* const-decl "{m: valid_measurement | unit_match?(y, m)}"
       measurements nil))
   nil))
 (nzangle_div_nzreal_is_nzangle 0
  (nzangle_div_nzreal_is_nzangle-1 nil 3652714048
   ("" (judgement-tcc) nil nil)
   ((/ const-decl "{m: valid_measurement | unit_match?(x, m)}"
       measurements nil))
   nil))
 (degree_TCC1 0
  (degree_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (degree? const-decl "boolean" angles nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (degrees_to_radians_TCC1 0
  (degrees_to_radians_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((degree? const-decl "boolean" angles nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (radian? const-decl "bool" angles nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (radians_to_degrees_TCC1 0
  (radians_to_degrees_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((radian? const-decl "bool" angles nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (degree? const-decl "boolean" angles nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (r2d_is_inv_d2r_TCC1 0
  (r2d_is_inv_d2r_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((degree? const-decl "boolean" angles nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (angle? const-decl "bool" angles nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (degrees_to_radians const-decl "(radian?)" angles nil)
    (radians_to_degrees const-decl "(degree?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (r2d_is_inv_d2r_TCC2 0
  (r2d_is_inv_d2r_TCC2-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (degree? const-decl "boolean" angles nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (angle? const-decl "bool" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (r2d_is_inv_d2r 0
  (r2d_is_inv_d2r-1 nil 3652717530 ("" (grind) nil nil)
   ((degree? const-decl "boolean" angles nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (angle? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (degrees_to_radians const-decl "(radian?)" angles nil)
    (radians_to_degrees const-decl "(degree?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (explicit_system? const-decl "bool" measurements nil)
    (system_match? const-decl "bool" measurements nil)
    (unit_match? const-decl "bool" measurements nil)
    (comparable? const-decl "bool" measurements nil)
    (base_value const-decl "real" measurements nil)
    (= const-decl "bool" measurements nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   shostak))
 (d2r_is_inv_r2d_TCC1 0
  (d2r_is_inv_r2d_TCC1-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((radian? const-decl "bool" angles nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (/= const-decl "boolean" notequal nil)
    (angle? const-decl "bool" angles nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radians_to_degrees const-decl "(degree?)" angles nil)
    (degrees_to_radians const-decl "(radian?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (d2r_is_inv_r2d_TCC2 0
  (d2r_is_inv_r2d_TCC2-1 nil 3652714048 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (system_enum type-decl nil measurements nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (radian? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (angle? const-decl "bool" angles nil)
    (/= const-decl "boolean" notequal nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil))
   nil))
 (d2r_is_inv_r2d 0
  (d2r_is_inv_r2d-1 nil 3652717538 ("" (grind) nil nil)
   ((radian? const-decl "bool" angles nil)
    (measurement nonempty-type-eq-decl nil measurements nil)
    (system_enum type-decl nil measurements nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (angle? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radians_to_degrees const-decl "(degree?)" angles nil)
    (degrees_to_radians const-decl "(radian?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (/= const-decl "boolean" notequal nil)
    (explicit_system? const-decl "bool" measurements nil)
    (system_match? const-decl "bool" measurements nil)
    (unit_match? const-decl "bool" measurements nil)
    (comparable? const-decl "bool" measurements nil)
    (base_value const-decl "real" measurements nil)
    (= const-decl "bool" measurements nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   shostak))
 (two_pi_radians_is_360_degrees_TCC1 0
  (two_pi_radians_is_360_degrees_TCC1-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (two_pi_radians_is_360_degrees_TCC2 0
  (two_pi_radians_is_360_degrees_TCC2-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (* const-decl "{m: valid_measurement | unit_match?(y, m)}"
       measurements nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (angle? const-decl "bool" angles nil)
    (radian? const-decl "bool" angles nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil))
 (two_pi_radians_is_360_degrees_TCC3 0
  (two_pi_radians_is_360_degrees_TCC3-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (* const-decl "{m: valid_measurement | unit_match?(y, m)}"
       measurements nil)
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radians_to_degrees const-decl "(degree?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   nil))
 (two_pi_radians_is_360_degrees_TCC4 0
  (two_pi_radians_is_360_degrees_TCC4-1 nil 3652714048
   ("" (subtype-tcc) nil nil)
   ((zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil))
   nil))
 (two_pi_radians_is_360_degrees 0
  (two_pi_radians_is_360_degrees-1 nil 3652717543 ("" (grind) nil nil)
   ((Integral const-decl "real" integral_def "analysis/")
    (atan_value const-decl "real" atan "trig_fnd/")
    (pi const-decl "posreal" atan "trig_fnd/")
    (zero_measurement const-decl "measurement" measurements nil)
    (zero_angle const-decl "angle" angles nil)
    (unit_angle const-decl "angle" angles nil)
    (radian const-decl "(radian?)" angles nil)
    (* const-decl "{m: valid_measurement | unit_match?(y, m)}"
       measurements nil)
    (degree_scaling const-decl "posreal" angles nil)
    (degree const-decl "(degree?)" angles nil)
    (radians_to_degrees const-decl "(degree?)" angles nil)
    (dimension_match? const-decl "bool" measurements nil)
    (valid_measurement? const-decl "bool" measurements nil)
    (system_match? const-decl "bool" measurements nil)
    (unit_match? const-decl "bool" measurements nil)
    (comparable? const-decl "bool" measurements nil)
    (base_value const-decl "real" measurements nil)
    (= const-decl "bool" measurements nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (zero_measurement_is_dimensionless name-judgement "dimensionless"
     dimensionlesses nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   shostak)))

